%!PS-Adobe-3.0 EPSF-3.0
%%Creator: uDraw(Graph) 3.1.1 (info available on http://www.b-novative.com/)
%%For: ewen@ewen-MacBookPro (on: x86_64 Linux 3.13.0-43-generic unix)
%%Title: /home/ewen/metaca/aisb2015/graph.ps
%%CreationDate: Wed Jan 28 21:34:50 2015
%%BoundingBox: 0 0 335 423
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Helvetica-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/three/p/threesuperior/ntilde/IJ/uogonek/space/space
/space/space/space/space/space/space/gamma/space
/afii10067/Ntilde/space/space/space/space/afii57800/multiply
/Oslash/space/space/space/space/space/space/space
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica-Bold
%%EndSetup

%%Page: 1 1
save
0.0 0.0 translate
90 rotate
1 1 scale
25 -334 translate
-25 334 moveto 397 334 lineto 397 0 lineto -25 0 lineto closepath clip newpath
gsave
0 309 moveto 600 0 rlineto 0 -400 rlineto -600 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
0 309 moveto 600 0 rlineto 0 -400 rlineto -600 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
1.000 1.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
60 268 translate 40 17 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.565 0.933 0.565 setrgbcolor AdjustColor
fill
matrix currentmatrix
60 268 translate 40 17 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica-Bold findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
60 268 [
[(Colour)]
] 13 -0.5 0.5 0 false DrawText
grestore
gsave
grestore
gsave
matrix currentmatrix
96 162 translate 68 23 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.565 0.933 0.565 setrgbcolor AdjustColor
fill
matrix currentmatrix
96 162 translate 68 23 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica-Bold findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
96 162 [
[(Colourencoding)]
] 13 -0.5 0.5 0 false DrawText
grestore
gsave
grestore
gsave
matrix currentmatrix
182 268 translate 58 21 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.565 0.933 0.565 setrgbcolor AdjustColor
fill
matrix currentmatrix
182 268 translate 58 21 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica-Bold findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
182 268 [
[(Genencoding)]
] 13 -0.5 0.5 0 false DrawText
grestore
gsave
grestore
gsave
matrix currentmatrix
182 61 translate 37 16 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.565 0.933 0.565 setrgbcolor AdjustColor
fill
matrix currentmatrix
182 61 translate 37 16 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica-Bold findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
182 61 [
[(blend)]
] 13 -0.5 0.5 0 false DrawText
grestore
gsave
grestore
gsave
matrix currentmatrix
273 162 translate 79 25 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.565 0.933 0.565 setrgbcolor AdjustColor
fill
matrix currentmatrix
273 162 translate 79 25 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica-Bold findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
273 162 [
[(Numericalencoding)]
] 13 -0.5 0.5 0 false DrawText
grestore
gsave
grestore
gsave
matrix currentmatrix
294 268 translate 30 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.565 0.933 0.565 setrgbcolor AdjustColor
fill
matrix currentmatrix
294 268 translate 30 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica-Bold findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
294 268 [
[(Nat)]
] 13 -0.5 0.5 0 false DrawText
grestore
gsave
grestore
gsave
166 248 moveto
140 216 lineto
118.127796791915 189.080365282357 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.447 0.337 setrgbcolor AdjustColor
stroke
114 184 moveto
125.837145208398 189.845254084751 lineto
121.955799093817 192.998847802848 lineto
121.179685093701 193.629440427943 lineto
117.298338979119 196.78303414604 lineto
114 184 lineto
fill
grestore
gsave
115 140 moveto
142 108 lineto
164.778738779778 81.0029762610037 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.302 0.302 0.302 setrgbcolor AdjustColor
stroke
169 76 moveto
165.46527130932 88.7196971301712 lineto
161.643049600297 85.4946975631831 lineto
160.878758116789 84.8498266239733 lineto
157.056536407766 81.6248270569852 lineto
169 76 lineto
fill
grestore
gsave
66 251 moveto
77 218 lineto
85.9300044019971 191.209986794009 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
88 185 moveto
89.4236574026078 198.124717200763 lineto
84.6792922290572 196.543262142913 lineto
83.7306089310067 196.227034376896 lineto
78.9862437574561 194.645579319046 lineto
88 185 lineto
fill
grestore
gsave
181 247 moveto
180 205 lineto
179 162 lineto
180 120 lineto
181.695868287127 83.538831826767 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.302 0.302 0.302 setrgbcolor AdjustColor
stroke
182 77 moveto
186.937476139886 89.2436241108608 lineto
181.94187678941 89.0112706526991 lineto
180.942956703332 88.9648092533467 lineto
175.947357352856 88.732455795185 lineto
182 77 lineto
fill
grestore
gsave
grestore
gsave
291 253 moveto
284 220 lineto
279.170966339499 193.440314867246 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
278 187 moveto
285.559072519298 197.823373995571 lineto
280.638739098888 198.717980072009 lineto
279.654869188788 198.896865510209 lineto
274.734535768378 199.791471586647 lineto
278 187 lineto
fill
grestore
gsave
199 248 moveto
225 217 lineto
247.700778373379 190.936143349084 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.447 0.337 setrgbcolor AdjustColor
stroke
252 186 moveto
248.266177140575 198.662684109399 lineto
244.495015079548 195.378123604634 lineto
243.740933483662 194.721342859829 lineto
239.969771422634 191.436782355064 lineto
252 186 lineto
fill
grestore
gsave
251 138 moveto
223 107 lineto
199.387627376539 80.8577303097395 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.302 0.302 0.302 setrgbcolor AdjustColor
stroke
195 76 moveto
207.126412019657 81.2187291105702 lineto
203.415156703259 84.570830686672 lineto
202.673054060508 85.2411169446408 lineto
198.961798744109 88.5932185207426 lineto
195 76 lineto
fill
grestore
restore showpage

%%Trailer
end
%%EOF

